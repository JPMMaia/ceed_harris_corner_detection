GAP REPORT LOG OPENED ON Tue Apr 26 10:30:33 2016

C:\Users\JPMMaia\Documents\Projects\Cadeiras\4th year\2nd Semester\CEED\ceed_harris_corner_detection\HarrisCornerDetection\Source\Vector.h(3): remark #30752: (DTRANS) Split the structure '_Vector' into two parts to improve data locality. Frequently accessed fields are 'Data'; performance may improve by putting these fields into one structure and the remaining fields into another structure. [VERIFY] The suggestion is based on the field references in the current compilation. Please make sure that the restructuring is applied to field references in all source files of the application, and that the restructured code satisfies the original program semantics.

C:\Users\JPMMaia\Documents\Projects\Cadeiras\4th year\2nd Semester\CEED\ceed_harris_corner_detection\HarrisCornerDetection\Source\MatrixFloat.c(100): remark #30534: (LOOP) Add -Qansi-alias option for better type-based disambiguation analysis by the compiler if appropriate (the option will apply for the entire compilation). This will improve optimizations for the loop at line 100. [VERIFY] Make sure that the semantics of this option is obeyed for the entire compilation.

C:\Users\JPMMaia\Documents\Projects\Cadeiras\4th year\2nd Semester\CEED\ceed_harris_corner_detection\HarrisCornerDetection\Source\MatrixFloat.c(113): remark #30519: (PAR) Insert a "#pragma parallel" statement right before the loop at line 113 to parallelize the loop. [VERIFY] Make sure that these arrays in the loop do not have cross-iteration dependencies: ixiy.Data, iy.Data, ix.Data. A cross-iteration dependency exists if a memory location is modified in an iteration of the loop and accessed (by a read or a write) in another iteration of the loop.

C:\Users\JPMMaia\Documents\Projects\Cadeiras\4th year\2nd Semester\CEED\ceed_harris_corner_detection\HarrisCornerDetection\Source\MatrixFloat.c(113): remark #30525: (PAR) Insert a "#pragma loop count min(128)" statement right before the loop at line 113 to parallelize the loop. [VERIFY] Make sure that the loop has a minimum of 128 iterations.
C:\Users\JPMMaia\Documents\Projects\Cadeiras\4th year\2nd Semester\CEED\ceed_harris_corner_detection\HarrisCornerDetection\Source\MatrixFloat.c(98): remark #30525: (PAR) Insert a "#pragma loop count min(32)" statement right before the loop at line 98 to parallelize the loop. [VERIFY] Make sure that the loop has a minimum of 32 iterations.
C:\Users\JPMMaia\Documents\Projects\Cadeiras\4th year\2nd Semester\CEED\ceed_harris_corner_detection\HarrisCornerDetection\Source\MatrixFloat.c(113): remark #30519: (PAR) Insert a "#pragma parallel" statement right before the loop at line 113 to parallelize the loop. [VERIFY] Make sure that these arrays in the loop do not have cross-iteration dependencies: cim.Data, iy2.Data, ix2.Data. A cross-iteration dependency exists if a memory location is modified in an iteration of the loop and accessed (by a read or a write) in another iteration of the loop.

C:\Users\JPMMaia\Documents\Projects\Cadeiras\4th year\2nd Semester\CEED\ceed_harris_corner_detection\HarrisCornerDetection\Source\MatrixFloat.c(113): remark #30519: (PAR) Insert a "#pragma parallel" statement right before the loop at line 113 to parallelize the loop. [VERIFY] Make sure that these arrays in the loop do not have cross-iteration dependencies: cim.Data, ixy.Data. A cross-iteration dependency exists if a memory location is modified in an iteration of the loop and accessed (by a read or a write) in another iteration of the loop.

C:\Users\JPMMaia\Documents\Projects\Cadeiras\4th year\2nd Semester\CEED\ceed_harris_corner_detection\HarrisCornerDetection\Source\MatrixFloat.c(113): remark #30519: (PAR) Insert a "#pragma parallel" statement right before the loop at line 113 to parallelize the loop. [VERIFY] Make sure that these arrays in the loop do not have cross-iteration dependencies: denominator.Data, iy2.Data, ix2.Data. A cross-iteration dependency exists if a memory location is modified in an iteration of the loop and accessed (by a read or a write) in another iteration of the loop.

C:\Users\JPMMaia\Documents\Projects\Cadeiras\4th year\2nd Semester\CEED\ceed_harris_corner_detection\HarrisCornerDetection\Source\MatrixFloat.c(113): remark #30519: (PAR) Insert a "#pragma parallel" statement right before the loop at line 113 to parallelize the loop. [VERIFY] Make sure that these arrays in the loop do not have cross-iteration dependencies: cim.Data, denominator.Data. A cross-iteration dependency exists if a memory location is modified in an iteration of the loop and accessed (by a read or a write) in another iteration of the loop.

C:\Users\JPMMaia\Documents\Projects\Cadeiras\4th year\2nd Semester\CEED\ceed_harris_corner_detection\HarrisCornerDetection\Source\MatrixFloat.c(125): remark #30525: (PAR) Insert a "#pragma loop count min(128)" statement right before the loop at line 125 to parallelize the loop. [VERIFY] Make sure that the loop has a minimum of 128 iterations.
C:\Users\JPMMaia\Documents\Projects\Cadeiras\4th year\2nd Semester\CEED\ceed_harris_corner_detection\HarrisCornerDetection\Source\MatrixFloat.c(113): remark #30519: (PAR) Insert a "#pragma parallel" statement right before the loop at line 113 to parallelize the loop. [VERIFY] Make sure that these arrays in the loop do not have cross-iteration dependencies: cim.Data, mx.Data. A cross-iteration dependency exists if a memory location is modified in an iteration of the loop and accessed (by a read or a write) in another iteration of the loop.

C:\Users\JPMMaia\Documents\Projects\Cadeiras\4th year\2nd Semester\CEED\ceed_harris_corner_detection\HarrisCornerDetection\Source\MathUtils.c(68): remark #30534: (LOOP) Add -Qansi-alias option for better type-based disambiguation analysis by the compiler if appropriate (the option will apply for the entire compilation). This will improve optimizations for the loop at line 68. [VERIFY] Make sure that the semantics of this option is obeyed for the entire compilation.

C:\Users\JPMMaia\Documents\Projects\Cadeiras\4th year\2nd Semester\CEED\ceed_harris_corner_detection\HarrisCornerDetection\Source\MathUtils.c(12): remark #30525: (PAR) Insert a "#pragma loop count min(64)" statement right before the loop at line 12 to parallelize the loop. [VERIFY] Make sure that the loop has a minimum of 64 iterations.
C:\Users\JPMMaia\Documents\Projects\Cadeiras\4th year\2nd Semester\CEED\ceed_harris_corner_detection\HarrisCornerDetection\Source\MathUtils.c(66): remark #30519: (PAR) Insert a "#pragma parallel" statement right before the loop at line 66 to parallelize the loop. [VERIFY] Make sure that these arrays in the loop do not have cross-iteration dependencies: matrixC.Data. A cross-iteration dependency exists if a memory location is modified in an iteration of the loop and accessed (by a read or a write) in another iteration of the loop.

C:\Users\JPMMaia\Documents\Projects\Cadeiras\4th year\2nd Semester\CEED\ceed_harris_corner_detection\HarrisCornerDetection\Source\MathUtils.c(66): remark #30525: (PAR) Insert a "#pragma loop count min(32)" statement right before the loop at line 66 to parallelize the loop. [VERIFY] Make sure that the loop has a minimum of 32 iterations.
C:\Users\JPMMaia\Documents\Projects\Cadeiras\4th year\2nd Semester\CEED\ceed_harris_corner_detection\HarrisCornerDetection\Source\MathUtils.c(87): remark #30519: (PAR) Insert a "#pragma parallel" statement right before the loop at line 87 to parallelize the loop. [VERIFY] Make sure that these arrays in the loop do not have cross-iteration dependencies: matrixC.Data, output.Data, output.Data. A cross-iteration dependency exists if a memory location is modified in an iteration of the loop and accessed (by a read or a write) in another iteration of the loop.

Number of advice-messages emitted for this compilation session: 16.
END OF GAP REPORT LOG
